{"version":3,"sources":["../../../../source/test/library/log/formatted-log.test.js"],"names":["Test","FormattedLog","test","logPath","log","trace","error","Error","pass"],"mappings":"AAAA;AACA;AACA,OAAOA,IAAP,MAAiB,KAAjB;;AAEA,SAASC,YAAT,QAA6B,mBAA7B;;AAEAD,IAAI,CAAC,gCAAD,EAAmC,MAAOE,IAAP,IAAgB;;AAErD,MAAIC,OAAO,GAAG,2CAAd;AACA;;AAEA,MAAIC,GAAG,GAAG,IAAIH,YAAJ,CAAiBE,OAAjB,EAA0B,EAAE,SAAS,OAAX,EAA1B,CAAV;;AAEA,MAAI;;AAEFC,IAAAA,GAAG,CAACC,KAAJ,CAAU,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAX,EAAX,EAAX,EAAX,EAAV,EAAkE,OAAlE;AACAD,IAAAA,GAAG,CAACE,KAAJ,CAAU,IAAIC,KAAJ,CAAU,OAAV,CAAV;;AAED,GALD,SAKU;AACR;AACD;;AAEDL,EAAAA,IAAI,CAACE,GAAL,CAAU,sBAAqBD,OAAQ,GAAvC;AACAD,EAAAA,IAAI,CAACM,IAAL;;AAED,CAnBG,CAAJ","sourcesContent":["// import { FileSystem } from '@virtualpatterns/mablung-file-system'\n// import Path from 'path'\nimport Test from 'ava'\n\nimport { FormattedLog } from '../../../index.js'\n\nTest('new FormattedLog(path, option)', async (test) => {\n\n  let logPath = 'process/log/formatted-log-constructor.log'\n  // await FileSystem.ensureDir(Path.dirname(logPath))\n\n  let log = new FormattedLog(logPath, { 'level': 'trace' })\n\n  try {\n\n    log.trace({ 'value': { 'value': { 'value': { 'value': {} } } } }, 'trace')  \n    log.error(new Error('error'))  \n    \n  } finally {\n    // await FileSystem.remove(logPath)\n  }\n\n  test.log(`Manually validate '${logPath}'`)\n  test.pass()\n\n})\n\n"],"file":"formatted-log.test.js"}