{"version":3,"sources":["../../source/sandbox/w.js"],"names":["FileSystem","Path","WorkerClient","ShortFormattedLog","main","logPath0","ensureDir","dirname","log","logPath1","worker","writeTo","on","_formatReturnValue","off","createProxy","console","dir","module","getPid","exit","error","Promise","resolve","setTimeout"],"mappings":"AAAA,OAAO,qDAAP;AACA,SAASA,UAAT,QAA2B,sCAA3B;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,YAAT,QAA6B,iCAA7B;;AAEA,SAASC,iBAAT,QAAkC,aAAlC;;AAEA,eAAeC,IAAf,GAAsB;;AAEpB,MAAI;;AAEF,QAAIC,QAAQ,GAAG,yBAAf;AACA,UAAML,UAAU,CAACM,SAAX,CAAqBL,IAAI,CAACM,OAAL,CAAaF,QAAb,CAArB,CAAN;;AAEA,QAAIG,GAAG,GAAG,IAAIL,iBAAJ,CAAsBE,QAAtB,EAAgC,EAAE,SAAS,OAAX,EAAhC,CAAV;;AAEA,QAAI;;AAEF,UAAII,QAAQ,GAAG,yBAAf;AACA,YAAMT,UAAU,CAACM,SAAX,CAAqBL,IAAI,CAACM,OAAL,CAAaE,QAAb,CAArB,CAAN;;AAEA,UAAIC,MAAM,GAAG,IAAIR,YAAJ,EAAb;AACAQ,MAAAA,MAAM,CAACC,OAAP,CAAeF,QAAf;;AAEAC,MAAAA,MAAM,CAACE,EAAP,CAAUC,kBAAV,GAA+B,SAASA,kBAAT,GAA8B;AAC3D,eAAO,CAAE,EAAF,EAAM,EAAN,CAAP;AACD,OAFD;;AAIAH,MAAAA,MAAM,CAACI,GAAP,CAAWD,kBAAX,GAAgC,SAASA,kBAAT,GAA8B;AAC5D,eAAO,CAAE,EAAF,EAAM,EAAN,CAAP;AACD,OAFD;;AAIAH,MAAAA,MAAM,GAAGF,GAAG,CAACO,WAAJ,CAAgBL,MAAhB,CAAT;;AAEA,UAAI;AACFM,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAMP,MAAM,CAACQ,MAAP,CAAcC,MAAd,EAAlB;AACD,OAFD,SAEU;AACR,cAAMT,MAAM,CAACU,IAAP,EAAN;AACD;;AAEF,KAxBD,SAwBU;AACR;AACD;;AAEF,GAnCD,CAmCE,OAAOC,KAAP,EAAc;AACdL,IAAAA,OAAO,CAACK,KAAR,CAAcA,KAAd;AACD;;AAED,QAAM,IAAIC,OAAJ,CAAaC,OAAD,IAAaC,UAAU,CAACD,OAAD,EAAU,IAAV,CAAnC,CAAN;;AAED;;AAEDnB,IAAI","sourcesContent":["import '@virtualpatterns/mablung-source-map-support/install'\nimport { FileSystem } from '@virtualpatterns/mablung-file-system'\nimport Path from 'path'\nimport { WorkerClient } from '@virtualpatterns/mablung-worker'\n\nimport { ShortFormattedLog } from '../index.js'\n\nasync function main() {\n\n  try {\n\n    let logPath0 = 'process/log/worker0.log'\n    await FileSystem.ensureDir(Path.dirname(logPath0))\n  \n    let log = new ShortFormattedLog(logPath0, { 'level': 'trace' })\n  \n    try {\n      \n      let logPath1 = 'process/log/worker1.log'\n      await FileSystem.ensureDir(Path.dirname(logPath1))\n      \n      let worker = new WorkerClient()\n      worker.writeTo(logPath1)\n\n      worker.on._formatReturnValue = function _formatReturnValue() {\n        return [ {}, '' ]\n      }\n\n      worker.off._formatReturnValue = function _formatReturnValue() {\n        return [ {}, '' ]\n      }\n  \n      worker = log.createProxy(worker)\n  \n      try {\n        console.dir(await worker.module.getPid())\n      } finally {\n        await worker.exit()\n      }\n    \n    } finally {\n      // await FileSystem.remove(logPath0)\n    }\n  \n  } catch (error) {\n    console.error(error)\n  }\n  \n  await new Promise((resolve) => setTimeout(resolve, 5000))\n\n}\n\nmain()"],"file":"w.js"}