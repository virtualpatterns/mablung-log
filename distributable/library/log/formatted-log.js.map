{"version":3,"sources":["../../../source/library/log/formatted-log.js"],"names":["Configuration","Luxon","Utilities","Is","Log","DateTime","MILLISECONDS_PER_NANOSECOND","FormattedLog","constructor","parameter","defaultOption","getPrettifier","bind","merge","prettifierOption","option","data","format","string","formatDateTime","time","formatComputerName","hostname","pid","formatLevelName","level","messageKey","duration","formatDuration","stack","_data","Object","assign","v","not","emptyObject","formatInspect","inspect","dateTime","fromMillis","toFormat","longName","pattern","match","null","exec","shortName","levelNumber","getLevelName","toUpperCase","padStart","durationInNanoseconds"],"mappings":"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","sourcesContent":["import { Configuration } from '@virtualpatterns/mablung-configuration'\nimport Luxon from 'luxon'\nimport Utilities from 'util'\nimport Is from '@pwn/is'\n\nimport { Log } from '../log.js'\n\nconst { DateTime } = Luxon\n\nconst MILLISECONDS_PER_NANOSECOND = 1000000\n\nclass FormattedLog extends Log {\n\n  constructor(...parameter) {\n    super(...parameter)\n  }\n\n  get defaultOption() {\n\n    let defaultOption = { \n      'prettyPrint': { \n        'inspect': { \n          'depth': null, \n          'maxArrayLength': null, \n          'showHidden': true \n        }\n      }, \n      'prettifier': this.getPrettifier.bind(this) \n    }\n\n    return Configuration.merge(super.defaultOption, defaultOption)\n\n  }\n\n  getPrettifier(prettifierOption) {\n    // return this.format.bind(this, prettifierOption)\n    return (function (option, data) { return this.format(data, option) }).bind(this, prettifierOption)\n  }\n\n  format(data, option) {\n\n    let string = ''\n    string += Utilities.format(\n      '%s %s %s %s %s%s',\n      this.formatDateTime(data.time),\n      this.formatComputerName(data.hostname),\n      data.pid,\n      this.formatLevelName(data.level),\n      data[option.messageKey || 'msg'] || '',\n      data.duration ? ` in ${this.formatDuration(data.duration)}` : '')\n\n    if (data.stack) {\n      string += `\\n\\n${data.stack}\\n\\n`\n    } else {\n\n      let _data = Object.assign({}, data)\n\n      delete _data.time\n      delete _data.hostname\n      delete _data.pid\n      delete _data.level\n      delete _data[option.messageKey || 'msg']\n      delete _data.duration\n      delete _data.v\n\n      if (Is.not.emptyObject(_data)) {\n        string += `\\n\\n${this.formatInspect(_data, option.inspect)}\\n\\n`\n      }\n      else {\n        string += '\\n'\n      }\n\n    }\n\n    return string\n  \n  }\n\n  formatDateTime(dateTime) {\n    return DateTime.fromMillis(dateTime).toFormat('yyyy.LL.dd-HH:mm:ss.SSSZZZ')\n  }\n\n  formatComputerName(longName) {\n\n    let pattern = /^(.+)\\./i\n    let match = null\n\n    if (Is.not.null(match = pattern.exec(longName))) {\n      let [ , shortName ] = match\n      return shortName\n    }\n\n    return longName\n\n  }\n  \n  formatLevelName(levelNumber) {\n    return this.getLevelName(levelNumber).toUpperCase().padStart(5)\n  }\n\n  formatDuration(durationInNanoseconds) {\n    return `${durationInNanoseconds / MILLISECONDS_PER_NANOSECOND}ms`\n  }\n\n  formatInspect(data, option) {\n    return Utilities.inspect(data, option)\n  }\n\n}\n\nexport { FormattedLog }\n"],"file":"formatted-log.js"}